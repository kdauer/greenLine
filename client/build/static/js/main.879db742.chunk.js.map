{"version":3,"sources":["components/Signup.js","components/Login.js","components/Navbar.js","components/Autocomplete.js","components/TripDetail.js","components/ResultList.js","components/ShowDays.js","components/Results.js","components/SearchForm.js","components/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["Signup","state","username","password","message","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","axios","post","then","response","props","history","push","setUser","data","catch","err","onSubmit","this","htmlFor","type","id","onChange","Component","Login","Navbar","user","className","height","src","alt","to","onClick","resetTripResults","delete","Autocomplete","loading","showLoader","setTimeout","cities","results","forEach","c","includes","address","city","options","slice","map","r","key","e","updateText","innerText","placeholder","el","i","TripDetail","trip","selectedTrip","onlyHour","timeString","convert","str1","str2","departure","Date","arrival","toLocaleTimeString","legs","leg","index","origin","departurePlatform","destination","arrivalPlatform","line","href","ResultList","showDetail","handleClick","detail","length","duration","normalPrice","firstClass","style","border","product","Results","sortByPrice","priced","sort","a","b","sortByTime","timed","localeCompare","mapped","resultData","journey","obj","price","amount","sorted","console","log","prevProps","prevState","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","SearchForm","date","from","toId","fromId","class","travelers","resultTo","resultFrom","savedJourney","searchPrice","newFromId","newToId","getPrices","get","firstPrice","Promise","all","allRes","resultListSetTrue","getStations","directions","newDataTo","newDataFrom","handleInputChange","direction","text","updateTo","handleClickSave","setFavorites","reverseDestinations","location","window","pushState","isLoggedIn","resultListRender","UserPage","searchFavorite","favorites","details","_id","pathname","originId","destinationId","App","userObj","fave","path","render","exact","Boolean","React","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.879db742.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/signup\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n        this.props.setUser(response.data);\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Sign up</button>\n        </form>\n        {this.state.message && <p>{this.state.message}</p>}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/login\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n        this.props.setUser(response.data);\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\">Sign in</button>\n        </form>\n        {this.state.message && <p>{this.state.message}</p>}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nconst Navbar = props => {\n  const logout = () => {\n    axios.delete(\"/api/auth/logout\").then(() => {\n      props.setUser(null);\n    });\n  };\n\n  if (props.user) {\n    return (\n      <nav className=\"navbar\">\n        <img\n          className=\"Logo\"\n          height=\"128px\"\n          src=\"/GreenLineLogo.png\"\n          alt=\"Logo\"\n        />\n        <Link to=\"/\" onClick={props.resetTripResults}>\n          <img\n            className=\"HomeIcon Icon\"\n            src=\"/home.svg\"\n            alt=\"Home\"\n            height=\"32px\"\n          />\n          <p>Home</p>\n        </Link>\n        <Link to=\"/user\">\n          <img\n            className=\"HomeIcon Icon\"\n            src=\"/user.svg\"\n            alt=\"User\"\n            height=\"32px\"\n          />\n          <p>User</p>\n        </Link>\n        <Link onClick={logout} to=\"/\">\n          <img\n            className=\"LogoutIcon Icon\"\n            src=\"/logout.svg\"\n            alt=\"Logout\"\n            height=\"32px\"\n          />\n          <p>Logout</p>\n        </Link>\n      </nav>\n    );\n  }\n  return (\n    <nav className=\"navbar\">\n      <img\n        className=\"Logo\"\n        height=\"128px\"\n        src=\"/GreenLineLogo.png\"\n        alt=\"Logo\"\n      />\n\n      <Link className=\"navbar-home\" to=\"/\" onClick={props.resetTripResults}>\n        <img\n          className=\"HomeIcon Icon\"\n          src=\"/home.svg\"\n          alt=\"Home\"\n          height=\"32px\"\n        />\n        <p>Home</p>\n      </Link>\n      <Link className=\"navbar-login\" to=\"/login\">\n        <img\n          className=\"LoginIcon Icon\"\n          src=\"/login.svg\"\n          alt=\"Login\"\n          height=\"32px\"\n        />\n        <p>Login</p>\n      </Link>\n      <Link className=\"navbar-login\" to=\"/signup\">\n        <img\n          className=\"SignupIcon Icon\"\n          src=\"/signup.svg\"\n          alt=\"Signup\"\n          height=\"32px\"\n        />\n        <p>Signup</p>\n      </Link>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nexport default class Autocomplete extends Component {\n  state = {\n    loading: true,\n    showLoader: true\n  };\n\n  componentDidMount() {\n    // this.props.results.forEach(c => {\n    //   if (!this.state.cities.includes(c.address.city)) {\n    //     this.setState({\n    //       cities: [...this.state.cities, c.address.city]\n    //     });\n    //   }\n    // });\n\n    setTimeout(() => {\n      if (this.state.loading) {\n        this.setState({ showLoader: false });\n      }\n    }, 4000);\n  }\n  render() {\n    const cities = [];\n    this.props.results.forEach(c => {\n      if (!cities.includes(c.address.city)) {\n        cities.push(c.address.city);\n      }\n    });\n    let options = this.props.results.slice(0, 10).map(r => (\n      <li\n        className=\"AutocompleteItem\"\n        key={r.id}\n        onClick={e => {\n          this.props.updateText(e.target.innerText, r.id);\n        }}\n      >\n        {r.name}\n      </li>\n    ));\n\n    return (\n      <>\n        <input\n          className=\"inputText\"\n          placeholder={this.props.placeholder}\n          name={this.props.name}\n          id={this.props.id}\n          onChange={this.props.onChange}\n          value={this.props.value}\n        />\n\n        {!this.state.showLoader && (\n          <ul className=\"AutocompleteList\">\n            {cities.map((el, i) => {\n              return (\n                <li\n                  className=\"AutocompleteItem\"\n                  key={i}\n                  onClick={e => {\n                    this.props.updateText(e.target.innerText, el.id);\n                  }}\n                >\n                  {el}\n                </li>\n              );\n            })}\n            {options}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TripDetail extends Component {\n  state = {\n    trip: this.props.selectedTrip\n  };\n\n  onlyHour = timeString => timeString.slice(11, 16);\n\n  convert = (str1, str2) => {\n    let departure = new Date(str1);\n    let arrival = new Date(str2);\n    return new Date(+arrival - +departure).toLocaleTimeString().slice(0, 4);\n  };\n\n  render() {\n    //Date(this.state.detail.legs.departure)\n    //new Date(+arrival - +departure).toLocaleTimeString();\n    return (\n      <div>\n        {this.state.trip.legs.map((leg, index) => {\n          return (\n            <>\n              <p>\n                {this.onlyHour(leg.departure)} {leg.origin.name} Platfrom:\n                {leg.departurePlatform}\n                =>\n                {this.onlyHour(leg.arrival)} {leg.destination.name} Platfrom:\n                {leg.arrivalPlatform}\n                Duration: {this.convert(leg.departure, leg.arrival)} |train:\n                {leg.line.name}|\n                {this.state.trip.legs[index + 1] &&\n                  `Transfer Time:\n                  ${this.convert(\n                    leg.arrival,\n                    this.state.trip.legs[index + 1].departure\n                  )}`}\n              </p>\n            </>\n          );\n        })}\n        <a href=\"https://www.bahn.com/en/view/index.shtml\">\n          <button>Book Now</button>\n        </a>\n      </div>\n    );\n  }\n  /* <div>\n{/* this.props.setTripResults.map(details => {\n  return <ResultList details={details} key={details.id} />;\n})}\n</div>\nShows journey legs ( time, station names between two single connections in a given journey).\nDuration, platform number, train number, transfer time, next connection for each leg */\n}\n","import React, { Component } from \"react\";\nimport TripDetail from \"./TripDetail\";\n\nexport class ResultList extends Component {\n  state = {\n    showDetail: false\n  };\n\n  handleClick = () => {\n    this.state.showDetail\n      ? this.setState({\n          showDetail: false\n        })\n      : this.setState({\n          showDetail: true\n        });\n  };\n  // .toString() // .slice(0, 21)}\n\n  render() {\n    // console.log(this.state.detail);\n    const departure = new Date(this.props.detail.legs[0].departure);\n    const arrival = new Date(\n      this.props.detail.legs[this.props.detail.legs.length - 1].arrival\n    );\n    const duration = new Date(arrival - departure).toLocaleTimeString();\n    return (\n      <>\n        <div key={this.props.detail.id} onClick={this.handleClick}>\n          <p>\n\n\n            at:\n            {this.props.detail.legs[0].departure.slice(11, 16)}\n            From: {this.props.detail.origin.name} Platform:\n            {this.props.detail.legs[0].departurePlatform}\n          </p>\n          <p>\n            at:\n            {this.props.detail.legs[0].arrival.slice(11, 16)}\n            To: {this.props.detail.destination.name}\n            Platform:{this.props.detail.legs[0].arrivalPlatform}\n\n          </p>\n          <p>\n            Duration: {duration.slice(0, 2) + \"h\" + duration.slice(3, 5) + \"m\"}\n          </p>\n          <p>Changes: {this.props.detail.legs.length - 1}</p>\n <p>\n            2nd Class:\n            {this.props.detail.normalPrice}0 €\n          </p>\n          <p>\n            1st Class:\n            {this.props.detail.firstClass\n              ? this.props.detail.firstClass\n              : \"not available\"}\n            0 €\n          </p>\n          <ul>\n            {this.props.detail.legs.map((el, i) => {\n              return (\n                <li key={i} style={{ border: \"1px solid red\" }}>\n                  {el.line.product}\n                </li>\n              );\n            })}\n          </ul>\n\n          {this.state.showDetail ? (\n            <TripDetail selectedTrip={this.props.detail} />\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ResultList;\n","import React, { Component } from \"react\";\n\nexport default class Results extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport ResultList from \"./ResultList\";\nimport ShowDays from \"./ShowDays\";\n\nexport default class Results extends Component {\n  state = {\n    results: []\n  };\n\n  componentDidMount() {\n    const mapped = this.props.resultData.map((journey, i) => {\n      const obj = {};\n      obj.origin = journey.origin;\n      obj.destination = journey.destination;\n      obj.normalPrice = journey.price.amount;\n      obj.firstClass = this.props.firstClass[i]?.price.amount;\n      obj.legs = journey.legs;\n      obj.id = journey.id;\n      return obj;\n    });\n\n    const sorted = [...mapped].sort((a, b) => {\n      return a.legs[0].departure.localeCompare(b.legs[0].departure);\n    });\n    console.log(\"sorted results here\", sorted);\n    this.setState({\n      results: sorted\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(this.props.resultData);\n    // console.log(prevState.results);\n    if (prevProps !== this.props) {\n      const mapped = this.props.resultData.map((journey, i) => {\n        const obj = {};\n        obj.origin = journey.origin;\n        obj.destination = journey.destination;\n        obj.normalPrice = journey.price.amount;\n        obj.firstClass = this.props.firstClass[i]?.price.amount;\n        obj.legs = journey.legs;\n        obj.id = journey.id;\n        return obj;\n      });\n      const sorted = [...mapped].sort((a, b) => {\n        return a.legs[0].departure.localeCompare(b.legs[0].departure);\n      });\n\n      this.setState({\n        results: sorted\n      });\n    }\n  }\n\n  sortByPrice = () => {\n    const priced = [...this.state.results].sort((a, b) => {\n      return a.normalPrice - b.normalPrice;\n    });\n    this.setState({\n      results: priced\n    });\n  };\n\n  sortByTime = () => {\n    const timed = [...this.state.results].sort((a, b) => {\n      return a.legs[0].departure.localeCompare(b.legs[0].departure);\n    });\n    this.setState({\n      results: timed\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <ShowDays />\n        <div className=\"Filter\">\n          <button onClick={this.sortByPrice}>Sort by Price</button>\n          <img height=\"16px\" src=\"/filter.svg\" alt=\"Filter\" />\n          <button onClick={this.sortByTime}>Sort by Time</button>\n        </div>\n        {this.state.results.map(el => (\n          <ResultList detail={el} key={el.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./Autocomplete\";\nimport Results from \"./Results\";\nimport { Link } from \"react-router-dom\";\n\nDate.prototype.toDateInputValue = function() {\n  var local = new Date(this);\n  local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n  return local.toJSON().slice(0, 16);\n};\nconsole.log(new Date());\nexport class SearchForm extends Component {\n  state = {\n    date: new Date().toDateInputValue(),\n    from: \"\",\n    to: \"\",\n    toId: \"\",\n    fromId: \"\",\n    class: \"\",\n    travelers: \"\",\n    resultTo: [],\n    resultFrom: [],\n    id: \"\",\n    savedJourney: [],\n    resultData: [],\n    firstClass: []\n  };\n\n  handleChange = e => {\n    const date = e.target.value;\n    // console.log(date);\n    this.setState({\n      date: date\n    });\n  };\n  // searchFavorites=e=>{\n  //   this.setState({\n  //     toId:e.originId,\n  //     toId:this.props.\n  //   })\n  // }\n\n  searchPrice = state => {\n    this.setState({\n      resultData: []\n    });\n\n    let newFromId = state.fromId;\n    if (!newFromId) newFromId = state.from;\n\n    let newToId = state.toId;\n    if (!newToId) newToId = state.to;\n    // for(let i=0;i<3;i++){\n    //   switch (i) {\n    //     case 0: date=state.date.slice(8,10);\n    //     case value2:\n    //       //Statements executed when the\n    //       //result of expression matches value2\n\n    //     case valueN:\n    //       //Statements executed when the\n    //       //result of expression matches valueN\n\n    //     default:\n    //       //Statements executed when none of\n    //       //the values match the value of the expression\n\n    //   }\n    const getPrices = axios.get(\n      \"/api/price?date=\" +\n        state.date.slice(0, 16) +\n        \"&fromId=\" +\n        newFromId +\n        \"&toId=\" +\n        newToId\n    );\n    console.log(\"date format\", state.date.slice(0, 16));\n\n    const firstPrice = axios.get(\"/api/firstPrice\");\n    this.setState(\n      {\n        resultData: []\n      },\n      () => {\n        Promise.all([getPrices, firstPrice]).then(([allRes, firstClass]) => {\n          console.log(allRes.data.length);\n          this.setState(\n            {\n              resultData: allRes.data,\n              firstClass: firstClass.data\n            },\n            () => {\n              this.props.resultListSetTrue();\n            }\n          );\n        });\n      }\n    );\n    //}\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.searchPrice(this.state);\n  };\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.searchPrice(this.props.location.state);\n      window.history.pushState(null, \"\");\n    }\n  }\n\n  getStations = directions => {\n    axios\n      .post(\"/cities\", { to: this.state.to, from: this.state.from })\n      .then(response => {\n        if (directions === \"to\") {\n          let newDataTo = response.data.resultTo;\n          if (this.state.to === \"\") newDataTo = [];\n          this.setState({\n            resultTo: newDataTo\n          });\n        } else {\n          let newDataFrom = response.data.resultFrom;\n          if (this.state.from === \"\") newDataFrom = [];\n          this.setState({\n            resultFrom: newDataFrom\n          });\n        }\n      });\n  };\n\n  handleInputChange = direction => {\n    let target = direction.target.name;\n    this.setState(\n      {\n        [direction.target.name]: direction.target.value\n      },\n      () => {\n        this.getStations(target);\n      }\n    );\n  };\n\n  updateText = (text, id) => {\n    this.setState({\n      from: text,\n      fromId: id,\n      resultFrom: []\n    });\n  };\n\n  updateTo = (text, id) => {\n    this.setState({\n      to: text,\n      toId: id,\n      resultTo: []\n    });\n  };\n\n  handleClickSave = event => {\n    axios\n      .post(\"/api/journeys\", {\n        to: this.state.to,\n        toId: this.state.toId,\n        from: this.state.from,\n        fromId: this.state.fromId,\n        date: this.state.date.slice(0, 16)\n      })\n      .then(response => {\n        this.setState({\n          savedJourney: response.data\n        });\n        this.props.setFavorites(this.state.savedJourney);\n        console.log(\"journey detail in searchform:\", this.state.savedJourney);\n      });\n  };\n\n  reverseDestinations = () => {\n    this.setState({\n      to: this.state.from,\n      from: this.state.to,\n      toId: this.state.fromId,\n      fromId: this.state.toId\n    });\n  };\n\n  render() {\n    //console.log(\"HI\", this.props.location.state);\n    return (\n      <div>\n        <div className=\"Searchform\">\n          {/* <form onSubmit={this.handleSubmit}> */}\n          <label htmlFor=\"From\"></label>\n          <Autocomplete\n            placeholder=\"From:\"\n            name=\"from\"\n            id=\"from\"\n            updateText={this.updateText}\n            results={this.state.resultFrom}\n            value={this.state.from}\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"To\"></label>\n          <br />\n          <button className=\"ReverseButton\" onClick={this.reverseDestinations}>\n            <img height=\"16px\" src=\"/swap-vertical.svg\" alt=\"switch\" />\n          </button>\n          <br />\n          <Autocomplete\n            placeholder=\"To:\"\n            name=\"to\"\n            id={this.state.toId}\n            updateText={this.updateTo}\n            results={this.state.resultTo}\n            value={this.state.to}\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"Date\"></label>\n          <input\n            className=\"inputDate\"\n            type=\"datetime-local\"\n            id=\"date\"\n            name=\"date\"\n            value={this.state.date}\n            // defaultValue={this.state.date}\n            onChange={this.handleChange}\n          />\n          <br />\n          {/* <select>\n            <option value=\"E\">Adults</option>\n            <option value=\"K\">Children</option>\n            <option value=\"B\">Baby</option>\n          </select> */}\n          <button\n            className=\"SubmitButton\"\n            type=\"submit\"\n            onClick={this.handleSubmit}\n          >\n            Find Prices\n          </button>\n          <br />\n          {/* </form> */}\n          {this.props.isLoggedIn ? (\n            <button onClick={this.handleClickSave}>\n              <img height=\"32px\" src=\"/fav.svg\" alt=\"Favourite\" />\n            </button>\n          ) : (\n            <Link id=\"favlink\" to=\"/Login\">\n              Login to save this trip\n            </Link>\n          )}\n        </div>\n        <div></div>\n        {this.props.resultListRender ? (\n          <Results\n            isLoggedIn={this.props.isLoggedIn}\n            resultData={this.state.resultData}\n            firstClass={this.state.firstClass}\n          />\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserPage extends Component {\n  searchFavorite = e => {\n    e.preventDefault();\n\n    console.log(\"SEARCHINGGG\", e.target);\n\n    // return <SearchForm favoriteSearch={this.props.favorites} />;\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.searchFavorite}>\n          {this.props.favorites.map(details => {\n            return (\n              <div key={this.props.favorites._id}>\n                {details.origin}\n                {details.destination}\n                {details.date.slice(0, 21)}\n                {/* <Link\n                  to={`/api/price?date=${details.date.slice(0, 16)}&fromId=${\n                    details.originId\n                  }&toId=${details.destinationId}`}\n                > */}\n                <Link\n                  to={{\n                    pathname: \"/\",\n                    state: {\n                      date: details.date.slice(0, 16),\n                      fromId: details.originId,\n                      toId: details.destinationId,\n                      to: details.origin,\n                      from: details.destination\n                    }\n                  }}\n                >\n                  <button>Search</button>\n                </Link>\n              </div>\n            );\n          })}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport { Route } from \"react-router-dom\";\nimport SearchForm from \"./components/SearchForm\";\nimport UserPage from \"./components/UserPage\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    resultListRender: false,\n    favorites: this.props.favorites || []\n    //newSearchForm: false\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  resetTripResults = () => {\n    this.setState({\n      resultListRender: false\n      //newSearchForm: true\n    });\n  };\n\n  resultListSetTrue = () => {\n    this.setState({\n      resultListRender: true\n    });\n  };\n\n  setFavorites = fave => {\n    this.setState({\n      favorites: [...this.state.favorites, fave]\n    });\n    console.log(\"favorites in App working\", this.state.favorites);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\"> */}\n        <Navbar\n          setUser={this.setUser}\n          user={this.state.user}\n          //setTripResults={this.setTripResults}\n          resetTripResults={this.resetTripResults}\n        />\n        <div>\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login history={props.history} setUser={this.setUser} />\n            )}\n          />\n        </div>\n\n        <div>\n          <Route\n            path=\"/signup\"\n            render={props => (\n              <Signup history={props.history} setUser={this.setUser} />\n            )}\n          />\n        </div>\n\n        <Route\n          path=\"/user\"\n          render={props => (\n            <UserPage\n              history={props.history}\n              setUser={this.setUser}\n              favorites={this.state.favorites}\n            />\n          )}\n        />\n        <div className=\"HomeImage\"></div>\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <SearchForm\n              // setTripResults={this.setTripResults}\n              {...props}\n              isLoggedIn={Boolean(this.state.user)}\n              resultListSetTrue={this.resultListSetTrue}\n              resultListRender={this.state.resultListRender}\n              setFavorites={this.setFavorites}\n            />\n          )}\n        />\n\n        {/* <Route\n          path=\"/:favoriteId\"\n          render={props => (\n            <SearchForm\n              history={props.history}\n              setUser={this.setUser}\n              favorites={props.favorites}\n            />\n          )}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} favorites={response.data.favorites} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n// user={response.data}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}